// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Website {
  id        String   @id @default(cuid())
  url       String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  scans     Scan[]
}

model Scan {
  id              String      @id @default(cuid())
  websiteId       String
  website         Website     @relation(fields: [websiteId], references: [id], onDelete: Cascade)
  status          String      @default("PENDING") // PENDING, QUEUED, RUNNING, COMPLETED, FAILED, CANCELLED
  scanType        String      // NMAP, NIKTO, NUCLEI, TESTSSL, FULL_SCAN, etc.
  scanMode        String?     // For advanced scan modes
  startedAt       DateTime?
  completedAt     DateTime?
  errorMessage    String?
  vulnerabilities Vulnerability[]
  results         String?     // JSON string of scan results
  metadata        String?     // JSON string of scan metadata
  progress        Int         @default(0)
  totalSteps      Int         @default(1)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Vulnerability {
  id          String                @id @default(cuid())
  scanId      String
  scan        Scan                  @relation(fields: [scanId], references: [id], onDelete: Cascade)
  severity    String                // CRITICAL, HIGH, MEDIUM, LOW, INFO
  type        String
  title       String
  description String?
  solution    String?
  reference   String?
  location    String?
  port        Int?
  service     String?
  cvss        Float?
  cve         String?
  tool        String?               // Which tool discovered this vulnerability
  createdAt   DateTime              @default(now())
}

model ScanQueue {
  id        String    @id @default(cuid())
  scanId    String    @unique
  priority  Int       @default(0)
  data      String    // JSON string of scan parameters
  status    String    @default("PENDING") // PENDING, PROCESSING, COMPLETED, FAILED
  attempts  Int       @default(0)
  maxAttempts Int     @default(3)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ApiKey {
  id        String   @id @default(cuid())
  name      String
  key       String   @unique
  active    Boolean  @default(true)
  rateLimit Int      @default(100) // requests per hour
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastUsed  DateTime?
}

// Note: SQLite doesn't support enums, so we use String with validation
// ScanStatus: PENDING, QUEUED, RUNNING, COMPLETED, FAILED, CANCELLED
// QueueStatus: PENDING, PROCESSING, COMPLETED, FAILED
// ScanType: NMAP, NIKTO, OWASP_ZAP, SSL_CHECK, HEADER_ANALYSIS, FULL_SCAN, NUCLEI, SQLMAP, VULS, COMMIX, NETTACKER, CORSY, TESTSSL, SSLSCAN, DIRSEARCH, GOBUSTER, WHATWEB, MASSCAN, ADVANCED_SCAN
// VulnerabilitySeverity: CRITICAL, HIGH, MEDIUM, LOW, INFO
