services:
  # Backend API with live reloading for development
  backend-dev:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    container_name: remotevulscan-backend-dev
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=file:./data/db/custom.db
      - TOOLS_PATH=/usr/local/bin
      - MAX_CONCURRENT_EXECUTIONS=5
      - PORT=8000
      - FRONTEND_URL=http://frontend-dev:3000
      - CORS_ORIGIN=http://localhost:3000,http://frontend-dev:3000
    volumes:
      # Mount source code for live reloading
      - ./backend/src:/app/src
      - ./backend/prisma:/app/prisma
      - ./backend/scripts:/app/scripts
      - ./backend/tsconfig.json:/app/tsconfig.json
      # Persistent data volumes
      - backend_data_dev:/app/data
      - backend_logs_dev:/app/logs
      - backend_reports_dev:/app/reports
    networks:
      - app-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Frontend Web Application with live reloading for development
  frontend-dev:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
    container_name: remotevulscan-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    volumes:
      # Mount source code for live reloading
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/next.config.js:/app/next.config.js
      - ./frontend/tailwind.config.ts:/app/tailwind.config.ts
      - ./frontend/postcss.config.mjs:/app/postcss.config.mjs
      - ./frontend/components.json:/app/components.json
      - ./frontend/tsconfig.json:/app/tsconfig.json
    depends_on:
      backend-dev:
        condition: service_healthy
    networks:
      - app-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  backend_data_dev:
    driver: local
  backend_logs_dev:
    driver: local
  backend_reports_dev:
    driver: local

networks:
  app-network-dev:
    driver: bridge
    name: remotevulscan-dev-network
