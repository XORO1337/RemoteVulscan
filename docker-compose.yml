version: '3.8'

services:
  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: app
    container_name: vuln-scanner-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - DATABASE_URL=file:./data/db/custom.db
      - DOCKERIZED=true
      - TOOLS_PATH=/tools
      - NEXT_PUBLIC_ENABLE_SOCKET=${NEXT_PUBLIC_ENABLE_SOCKET:-false}
      - TURNSTILE_SITE_KEY=${TURNSTILE_SITE_KEY:-}
      - TURNSTILE_SECRET_KEY=${TURNSTILE_SECRET_KEY:-}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./tools:/tools:ro
    depends_on:
      - db
      - tools
    networks:
      - vuln-scanner-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Security Tools Container
  tools:
    build:
      context: .
      dockerfile: Dockerfile.tools
    container_name: vuln-scanner-tools
    volumes:
      - ./tools:/tools
      - ./scripts:/scripts
    environment:
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/go/bin
    networks:
      - vuln-scanner-network
    restart: unless-stopped
    command: /tools/entrypoint.sh sleep infinity

  # Database (SQLite - file-based)
  db:
    image: alpine:latest
    container_name: vuln-scanner-db
    volumes:
      - ./data/db:/data/db
      - ./scripts/init-db.sh:/init-db.sh:ro
    environment:
      - SQLITE_DB_PATH=/data/db/custom.db
    networks:
      - vuln-scanner-network
    restart: unless-stopped
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        chmod +x /init-db.sh &&
        /init-db.sh &&
        tail -f /dev/null
      "

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: vuln-scanner-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - vuln-scanner-network
    restart: unless-stopped
    profiles:
      - production

  # Redis (Optional - for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: vuln-scanner-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vuln-scanner-network
    restart: unless-stopped
    profiles:
      - redis

  # Log Management (Optional - for centralized logging)
  fluentd:
    image: fluent/fluentd:v1.16-1
    container_name: vuln-scanner-logs
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - ./logs:/fluentd/log
    networks:
      - vuln-scanner-network
    restart: unless-stopped
    profiles:
      - logging

volumes:
  redis_data:
    driver: local

networks:
  vuln-scanner-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
