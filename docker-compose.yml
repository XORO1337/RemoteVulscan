version: '3.8'

services:
  # Backend API with integrated security tools
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: remotevulscan-backend
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./data/db/custom.db
      - TOOLS_PATH=/usr/local/bin
      - MAX_CONCURRENT_EXECUTIONS=5
      - PORT=8000
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./reports:/app/reports
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Web Application
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: remotevulscan-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database initialization
  db:
    image: alpine:latest
    container_name: remotevulscan-db
    volumes:
      - ./data/db:/data/db
      - ./scripts/init-db.sh:/init-db.sh:ro
    environment:
      - SQLITE_DB_PATH=/data/db/custom.db
    networks:
      - app-network
    restart: "no"
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        chmod +x /init-db.sh &&
        /init-db.sh &&
        echo 'Database initialization completed'
      "

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16