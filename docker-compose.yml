version: '3.8'

services:
  # Backend API with integrated security tools
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: remotevulscan-backend
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./data/db/custom.db
      - TOOLS_PATH=/usr/local/bin
      - MAX_CONCURRENT_EXECUTIONS=5
      - PORT=8000
      - FRONTEND_URL=http://frontend:3000
      - CORS_ORIGIN=http://localhost:3000,http://frontend:3000
    volumes:
      - backend_data:/app/data
      - backend_logs:/app/logs
      - backend_reports:/app/reports
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Web Application
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: remotevulscan-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  backend_data:
    driver: local
  backend_logs:
    driver: local
  backend_reports:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16